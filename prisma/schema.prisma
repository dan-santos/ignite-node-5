generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  INSTRUCTOR
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  role     Role   @default(STUDENT)

  questions     Question[]
  answers       Answer[]
  comments      Comment[]
  notifications Notification[]

  @@map("users")
}

model Question {
  id        String    @id @default(uuid())
  title     String
  slug      String    @unique
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @map("author_id")

  bestAnswer   Answer? @relation("bestAnswer", fields: [bestAnswerId], references: [id])
  bestAnswerId String? @unique @map("best_answer_id")

  answers Answer[]

  comments    Comment[]
  attachments Attachment[]

  @@map("questions")
}

model Answer {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @map("author_id")

  bestAnswerOn Question? @relation("bestAnswer")

  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @map("question_id")

  comments    Comment[]
  attachemnts Attachment[]

  @@map("answers")
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @map("author_id")

  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?   @map("question_id")

  answer   Answer? @relation(fields: [answerId], references: [id])
  answerId String? @map("answer_id")

  @@map("comments")
}

model Attachment {
  id    String @id @default(uuid())
  title String
  url   String

  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?   @map("question_id")

  answer   Answer? @relation(fields: [answerId], references: [id])
  answerId String? @map("answer_id")

  @@map("attachments")
}

model Notification {
  id        String    @id @default(uuid())
  title     String
  content   String
  readAt    DateTime? @map("read_at")
  createdAt DateTime  @default(now()) @map("created_at")

  recipient   User   @relation(fields: [recipientId], references: [id])
  recipientId String @map("recipient_id")

  @@map("notifications")
}
